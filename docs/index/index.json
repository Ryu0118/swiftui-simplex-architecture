{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/statecontainer\/reducerstate","title":"var reducerState: Target.Reducer.ReducerState","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/statecontainer\/subscript(dynamicmember:)","title":"subscript<Value>(dynamicMember _: WritableKeyPath<Target.ViewState, Value>) -> Value","type":"subscript"}],"path":"\/documentation\/simplexarchitecture\/statecontainer","title":"StateContainer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/store\/init(reducer:)-3qp8v","title":"init<R>(reducer: R)","type":"init"},{"path":"\/documentation\/simplexarchitecture\/store\/init(reducer:)-3zvo7","title":"init(reducer: Reducer)","type":"init"},{"path":"\/documentation\/simplexarchitecture\/store\/init(reducer:initialreducerstate:)-19w60","title":"init<R>(reducer: R, initialReducerState: () -> Reducer.ReducerState)","type":"init"},{"path":"\/documentation\/simplexarchitecture\/store\/init(reducer:initialreducerstate:)-4p9ee","title":"init(reducer: Reducer, initialReducerState: () -> Reducer.ReducerState)","type":"init"}],"path":"\/documentation\/simplexarchitecture\/store","title":"Store","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/teststore\/receive(_:timeout:expected:file:line:)","title":"func receive(Reducer.Action, timeout: TimeInterval, expected: ((StateContainer<Reducer.Target>) -> Void)?, file: StaticString, line: UInt) async","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/receivewithoutstatecheck(_:timeout:file:line:)","title":"func receiveWithoutStateCheck(Reducer.Action, timeout: TimeInterval, file: StaticString, line: UInt) async","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/send(_:assert:file:line:)-1dcq7","title":"func send(Reducer.ViewAction, assert: ((StateContainer<Reducer.Target>) -> Void)?, file: StaticString, line: UInt) async -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/send(_:assert:file:line:)-1kmy","title":"func send(Reducer.ViewAction, assert: ((StateContainer<Reducer.Target>) -> Void)?, file: StaticString, line: UInt) async -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/send(_:assert:file:line:)-4ym","title":"func send(Reducer.ViewAction, assert: ((StateContainer<Reducer.Target>) -> Void)?, file: StaticString, line: UInt) async -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/send(_:assert:file:line:)-6po0d","title":"func send(Reducer.ViewAction, assert: ((StateContainer<Reducer.Target>) -> Void)?, file: StaticString, line: UInt) async -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/teststore\/waitforall()","title":"func waitForAll() async","type":"method"}],"path":"\/documentation\/simplexarchitecture\/teststore","title":"TestStore","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/actionprotocol\/reduceraction","title":"ReducerAction","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/actionprotocol\/viewaction","title":"ViewAction","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/actionprotocol\/init(reduceraction:)","title":"init(reducerAction: Self.ReducerAction)","type":"init"},{"path":"\/documentation\/simplexarchitecture\/actionprotocol\/init(viewaction:)","title":"init(viewAction: Self.ViewAction)","type":"init"}],"path":"\/documentation\/simplexarchitecture\/actionprotocol","title":"ActionProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/reducer","title":"Reducer","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/viewstate","title":"ViewState","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/store","title":"var store: Store<Self.Reducer>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/pullback(to:parent:)","title":"func pullback<Parent>(to: CasePath<Parent.Reducer.Action, Self.Reducer.Action>, parent: Parent) -> Self","type":"method"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/pullback(to:parent:id:)","title":"func pullback<Parent, ID>(to: CasePath<Parent.Reducer.Action, (id: ID, action: Self.Reducer.Action)>, parent: Parent, id: ID) -> Self","type":"method"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/send(_:)","title":"func send(consuming Self.Reducer.ViewAction) -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/send(_:animation:)","title":"func send(consuming Self.Reducer.ViewAction, animation: Animation?) -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/send(_:transaction:)","title":"func send(consuming Self.Reducer.ViewAction, transaction: Transaction) -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/actionsendable\/teststore(viewstate:withdependencies:)","title":"func testStore(viewState: Self.ViewState, withDependencies: (inout DependencyValues) -> Void) -> TestStore<Self.Reducer>","type":"method"}],"path":"\/documentation\/simplexarchitecture\/actionsendable","title":"ActionSendable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/reducermodifier\/base","title":"Base","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/reducermodifier\/reduce(into:action:)","title":"func reduce(into: StateContainer<Self.Base.Target>, action: Self.Base.Action) -> SideEffect<Self.Base>","type":"method"}],"path":"\/documentation\/simplexarchitecture\/reducermodifier","title":"ReducerModifier","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/action","title":"Action","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/reduceraction","title":"ReducerAction","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/reducerstate","title":"ReducerState","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/target","title":"Target","type":"associatedtype"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/viewaction","title":"ViewAction","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/dependency(_:value:)","title":"func dependency<Value>(WritableKeyPath<DependencyValues, Value>, value: Value) -> _DependenciesOverrideModifier<Self>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/reducerprotocol\/reduce(into:action:)","title":"func reduce(into: StateContainer<Self.Target>, action: Self.Action) -> SideEffect<Self>","type":"method"}],"path":"\/documentation\/simplexarchitecture\/reducerprotocol","title":"ReducerProtocol","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/viewstateprotocol\/target","title":"Target","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/viewstateprotocol\/keypathmap","title":"static var keyPathMap: [PartialKeyPath<Self> : PartialKeyPath<Self.Target>]","type":"property"}],"path":"\/documentation\/simplexarchitecture\/viewstateprotocol","title":"ViewStateProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/send\/callasfunction(_:)","title":"func callAsFunction(Reducer.Action) -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/send\/callasfunction(_:animation:)","title":"func callAsFunction(Reducer.Action, animation: Animation?) -> SendTask","type":"method"},{"path":"\/documentation\/simplexarchitecture\/send\/callasfunction(_:transaction:)","title":"func callAsFunction(Reducer.Action, transaction: Transaction) -> SendTask","type":"method"}],"path":"\/documentation\/simplexarchitecture\/send","title":"Send","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/sendtask\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sendtask\/wait()","title":"func wait() async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/sendtask\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/simplexarchitecture\/sendtask\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/simplexarchitecture\/sendtask","title":"SendTask","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/cancellable(id:cancelinflight:)","title":"func cancellable(id: some Hashable, cancelInFlight: Bool) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/debounce(id:for:clock:)","title":"func debounce(id: some Hashable, for: Duration, clock: Clock<Duration>) -> SideEffect<Reducer>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/none","title":"static var none: SideEffect<Reducer>","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/cancel(id:)","title":"static func cancel(id: some Hashable) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/concurrent(_:)-4qgg9","title":"static func concurrent(Reducer.Action...) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/concurrent(_:)-96jm6","title":"static func concurrent(SideEffect<Reducer>...) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/run(priority:_:catch:)","title":"static func run(priority: TaskPriority?, (Send<Reducer>) async throws -> Void, catch: ((Error, Send<Reducer>) async -> Void)?) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/send(_:)","title":"static func send(Reducer.Action) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/serial(_:)-7ic0r","title":"static func serial(Reducer.Action...) -> SideEffect<Reducer>","type":"method"},{"path":"\/documentation\/simplexarchitecture\/sideeffect\/serial(_:)-z10u","title":"static func serial(SideEffect<Reducer>...) -> SideEffect<Reducer>","type":"method"}],"path":"\/documentation\/simplexarchitecture\/sideeffect","title":"SideEffect","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/voidsuccess\/init()","title":"init()","type":"init"},{"path":"\/documentation\/simplexarchitecture\/voidsuccess\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/voidsuccess\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/simplexarchitecture\/voidsuccess\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/simplexarchitecture\/voidsuccess","title":"VoidSuccess","type":"struct"},{"title":"Macros","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/reducer()","title":"macro Reducer()","type":"macro"},{"path":"\/documentation\/simplexarchitecture\/viewstate()","title":"macro ViewState()","type":"macro"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/failure(_:)","title":"case failure(Error)","type":"case"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/success(_:)","title":"case success(Success)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/init(catching:)-24rm0","title":"init(catching: () async throws -> Success) async","type":"init"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/init(catching:)-52auo","title":"init(catching: () async throws -> Void) async","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/get()","title":"func get() throws -> Success","type":"method"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/map(_:)","title":"func map<T>((Success) -> T) -> TaskResult<T>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/==(_:_:)","title":"static func == (TaskResult<Success>, TaskResult<Success>) -> Bool","type":"op"}],"path":"\/documentation\/simplexarchitecture\/taskresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/taskresult\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/simplexarchitecture\/taskresult\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/simplexarchitecture\/taskresult","title":"TaskResult","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/simplexarchitecture\/swiftui\/view\/alert(target:unwrapping:)","title":"func alert<Target>(target: Target, unwrapping: Binding<AlertState<Target.Reducer.Action>?>) -> some View","type":"method"},{"path":"\/documentation\/simplexarchitecture\/swiftui\/view\/confirmationdialog(target:unwrapping:)","title":"func confirmationDialog<Target>(target: Target, unwrapping: Binding<ConfirmationDialogState<Target.Reducer.Action>?>) -> some View","type":"method"}],"path":"\/documentation\/simplexarchitecture\/swiftui\/view","title":"View","type":"extension"}],"path":"\/documentation\/simplexarchitecture\/swiftui","title":"SwiftUI","type":"extension"}],"path":"\/documentation\/simplexarchitecture","title":"SimplexArchitecture","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}