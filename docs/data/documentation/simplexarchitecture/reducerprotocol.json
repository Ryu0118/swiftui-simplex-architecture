{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Target"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"codeListing","syntax":null,"code":["@Reducer","struct MyReducer {","    enum ViewAction {","        case increment","        case decrement","    }","","    func reduce(into state: StateContainer<MyView>, action: Action) -> SideEffect<MyReducer> {","        switch action {","        case .increment:","            state.counter += 1","            return .none","        case .decrement:","            state.counter -= 1","            return .none","        }","    }","}","","@ViewState","struct MyView: View {","    @State var counter = 0","    let store = Store(reducer: MyReducer())","","    var body: some View {","        VStack {","            Text(\"\\(counter)\")","            Button(\"+\") {","                send(.increment)","            }","            Button(\"-\") {","                send(.decrement)","            }","        }","    }","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Also, "},{"type":"codeVoice","code":"ReducerState"},{"type":"text","text":" is useful to reduce unnecessary View updates. View is not updated when "},{"type":"codeVoice","code":"ReducerState"},{"type":"text","text":" changes. It can be used only with "},{"type":"codeVoice","code":"Reducer"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["@Reducer","struct MyReducer {","    enum ViewAction {","        case increment","        case decrement","    }","","    struct ReducerState {","        var totalCalledCount = 0","    }","","    func reduce(into state: StateContainer<MyView>, action: Action) -> SideEffect<MyReducer> {","        state.reducerState.totalCalledCount += 1","        switch action {","        case .increment:","            state.counter += 1","            return .none","        case .decrement:","            state.counter -= 1","            return .none","        }","    }","}","","@ViewState","struct MyView: View {","    @State var counter = 0","","    let store: Store<MyView>","","    init() {","        store = Store(reducer: MyReducer(), initialReducerState: MyReducer.ReducerState())","    }","","    var body: some View {","        VStack {","            Text(\"\\(counter)\")","            Button(\"+\") {","                send(.increment)","            }","            Button(\"-\") {","                send(.decrement)","            }","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/simplexarchitecture\/reducerprotocol"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A protocol that defines a reducer for a target type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"title":"ReducerProtocol","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"s:19SimplexArchitecture15ReducerProtocolP","modules":[{"name":"SimplexArchitecture"}],"navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}]},"hierarchy":{"paths":[["doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/Action","doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ReducerAction","doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ReducerState","doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/Target","doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ViewAction"]},{"title":"Instance Methods","identifiers":["doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/dependency(_:value:)","doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/reduce(into:action:)"]}],"references":{"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/reduce(into:action:)":{"role":"symbol","title":"reduce(into:action:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StateContainer","preciseIdentifier":"s:19SimplexArchitecture14StateContainerC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Target"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Action"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SideEffect","preciseIdentifier":"s:19SimplexArchitecture10SideEffectV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Evolve the current state of ActionSendable to the next state."}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/reduce(into:action:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/reduce(into:action:)"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/Target":{"role":"symbol","title":"Target","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Target"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ActionSendable","preciseIdentifier":"s:19SimplexArchitecture14ActionSendableP"}],"abstract":[{"type":"text","text":"Target for the Reducer to change state, which must conform to ActionSendable and is automatically conformed to by the ViewState macros"}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/Target","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/target"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/ReducerAction":{"role":"symbol","title":"ReducerAction","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerAction"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"}],"abstract":[{"type":"text","text":"Action used only within Reducer."}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ReducerAction","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/reduceraction"},"doc://SimplexArchitecture/documentation/SimplexArchitecture":{"role":"collection","title":"SimplexArchitecture","abstract":[],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture","kind":"symbol","type":"topic","url":"\/documentation\/simplexarchitecture"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/Action":{"role":"symbol","title":"Action","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Action"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ActionProtocol","preciseIdentifier":"s:19SimplexArchitecture14ActionProtocolP"}],"abstract":[{"type":"text","text":"Combined ViewAction and ReducerAction type"}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/Action","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/action"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol":{"role":"symbol","title":"ReducerProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerProtocol"}],"abstract":[{"type":"text","text":"A protocol that defines a reducer for a target type."}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReducerProtocol"}],"url":"\/documentation\/simplexarchitecture\/reducerprotocol"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/ReducerState":{"role":"symbol","title":"ReducerState","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReducerState"},{"kind":"text","text":" = "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"}],"abstract":[{"type":"text","text":"State used by Reducer. Since the View is not update when the value of ReducerState is changed, it is used for the purpose of improving performance, etc."},{"type":"text","text":" "},{"type":"text","text":"The default is Never."}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ReducerState","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/reducerstate"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/dependency(_:value:)":{"role":"symbol","title":"dependency(_:value:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependency"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"DependencyValues","preciseIdentifier":"s:12Dependencies16DependencyValuesV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"_DependenciesOverrideModifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/dependency(_:value:)","kind":"symbol","type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/dependency(_:value:)"},"doc://SimplexArchitecture/documentation/SimplexArchitecture/ReducerProtocol/ViewAction":{"role":"symbol","title":"ViewAction","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewAction"}],"abstract":[{"type":"text","text":"A type that holds actions that change the state of the View."}],"identifier":"doc:\/\/SimplexArchitecture\/documentation\/SimplexArchitecture\/ReducerProtocol\/ViewAction","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/simplexarchitecture\/reducerprotocol\/viewaction"}}}